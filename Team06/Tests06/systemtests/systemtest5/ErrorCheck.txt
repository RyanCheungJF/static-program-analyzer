1 - Synonym name p cannot be declared more than once
procedure p, p1, p2, p;
Select p such that Calls(p, "A")
SemanticError
5000
2 - Synonym name not declared
procedure p;
Select p such that Calls(p1, "A")
SemanticError
5000
3 - Missing ; from declaration
procedure p
Select p such that Calls(p, "A")
SyntaxError
5000
4 - Missing quotation marks for procedure name
procedure p;
Select p such that Calls(p, A)
SemanticError
5000
5 - _ as synonym name 
procedure _;
Select p such that Calls(p, _)
SyntaxError
5000
6 - a123! as synonym name 
procedure a123!;
Select a123! such that Calls(a123!, _)
SyntaxError
5000
7 - Leading zero for stmtRef
stmt s;
Select s such that Follows(01, s)
SyntaxError
5000
8 - procedure as synonym name 
procedure procedure;
Select procedure such that Calls(procedure, _)
A, B, C, D, F
5000
9 - Select as synonym name 
procedure Select;
Select Select such that Calls(Select, _)
A, B, C, D, F
5000
10 - a123 as synonym name 
procedure a123;
Select a123 such that Calls(a123, _)
A, B, C, D, F
5000
11 - syn-assign not synonym of an assignment
read a;
Select a pattern a(_, "x")
SemanticError
5000
12 - Extra '_'
procedure p;
Select p such that Modifies(p, __)
SyntaxError
5000
13 - Case sensitivity check
procedure p;
Select p such that Calls(p, "a")
none
5000
14 - Declaration on second line check
procedure p;
variable v; Select p such that Modifies(p, v)
A, B, C, D, E, F, G
5000
15 - Misspelled Select
procedure p;
Selec p such that Modifies(p, v)
SyntaxError
5000
16 - Misspelled such that
procedure p;
Select p suchthat Modifies(p, v)
SyntaxError
5000
17 - Misspelled declaration entity - stmt
statement s;
Select p such that Modifies(s, _)
SyntaxError
5000
18 - Synonym digit
procedure 1;
Select 1 such that Calls(1, _)
SyntaxError
5000
19 - Space in relRef
procedure p;
Select p such that Cal ls   *(p, _)
SyntaxError
5000
20 - Space in entRef
procedure p, ab;
Select p such that Calls(p, a b)
SyntaxError
5000
21 - Extra '('
procedure p;
Select p such that Calls*((p, _)
SyntaxError
5000
22 - Procedure as LHS argument for Follows
procedure p;
Select p such that Follows(p, _)
SemanticError
5000
23 - Procedure as RHS argument for Follows
procedure p;
Select p such that Follows(_, p)
SemanticError
5000
24 - Variable as LHS argument for Follows
variable v;
Select v such that Follows(v, _)
SemanticError
5000
25 - Variable as RHS argument for Follows
variable v;
Select v such that Follows(_, v)
SemanticError
5000
26 - Constant as LHS argument for Follows
constant c;
Select c such that Follows(c, _)
SemanticError
5000
27 - Constant as RHS argument for Follows
constant c;
Select c such that Follows(_, c)
SemanticError
5000
28 - Procedure as LHS argument for Follows*
procedure p;
Select p such that Follows*(p, _)
SemanticError
5000
29 - Procedure as RHS argument for Follows*
procedure p;
Select p such that Follows*(_, p)
SemanticError
5000
30 - Variable as LHS argument for Follows*
variable v;
Select v such that Follows*(v, _)
SemanticError
5000
31 - Variable as RHS argument for Follows*
variable v;
Select v such that Follows*(_, v)
SemanticError
5000
32 - Constant as LHS argument for Follows*
constant c;
Select c such that Follows*(c, _)
SemanticError
5000
33 - Constant as RHS argument for Follows*
constant c;
Select c such that Follows*(_, c)
SemanticError
5000
34 - Procedure as LHS argument for Parent
procedure p;
Select p such that Parent(p, _)
SemanticError
5000
35 - Procedure as RHS argument for Parent
procedure p;
Select p such that Parent(_, p)
SemanticError
5000
36 - Variable as LHS argument for Parent
variable v;
Select v such that Parent(v, _)
SemanticError
5000
37 - Variable as RHS argument for Parent
variable v;
Select v such that Parent(_, v)
SemanticError
5000
38 - Constant as LHS argument for Parent
constant c;
Select c such that Parent(c, _)
SemanticError
5000
39 - Constant as RHS argument for Parent
constant c;
Select c such that Parent(_, c)
SemanticError
5000
40 - Procedure as LHS argument for Parent*
procedure p;
Select p such that Parent*(p, _)
SemanticError
5000
41 - Procedure as RHS argument for Parent*
procedure p;
Select p such that Parent*(_, p)
SemanticError
5000
42 - Variable as LHS argument for Parent*
variable v;
Select v such that Parent*(v, _)
SemanticError
5000
43 - Variable as RHS argument for Parent*
variable v;
Select v such that Parent*(_, v)
SemanticError
5000
44 - Constant as LHS argument for Parent*
constant c;
Select c such that Parent*(c, _)
SemanticError
5000
45 - Constant as RHS argument for Parent*
constant c;
Select c such that Parent*(_, c)
SemanticError
5000
46 - First argument for Modifies is _
variable v;
Select v such that Modifies(_, "x")
SemanticError
5000
47 - Constant as LHS argument for Modifies
constant c;
Select c such that Modifies(c, _)
SemanticError
5000
48 - Variable as LHS argument for Modifies
variable v;
Select v such that Modifies(v, _)
SemanticError
5000
49 - Procedure as RHS argument for Modifies
procedure p; stmt s;
Select s such that Modifies(s, p)
SemanticError
5000
50 - Statement as RHS argument for Modifies
read r; stmt s;
Select r such that Modifies(r, s)
SemanticError
5000
51 - Statement Number as RHS argument for Modifies
read r;
Select r such that Modifies(r, 12)
SyntaxError
5000
52 - Read as RHS argument for Modifies
procedure p; read r;
Select p such that Modifies(p, r)
SemanticError
5000
53 - Print as RHS argument for Modifies
procedure p; print pn;
Select p such that Modifies(p, pn)
SemanticError
5000
54 - Call as RHS argument for Modifies
procedure p; call cl;
Select p such that Modifies(p, cl)
SemanticError
5000
55 - While as RHS argument for Modifies
procedure p; while w;
Select p such that Modifies(p, w)
SemanticError
5000
56 - If as RHS argument for Modifies
procedure p; if i;
Select p such that Modifies(p, i)
SemanticError
5000
57 - Assign as RHS argument for Modifies
procedure p; assign a;
Select p such that Modifies(p, a)
SemanticError
5000
58 - Constant as RHS argument for Modifies
procedure p; constant c;
Select p such that Modifies(p, c)
SemanticError
5000
59 - First argument for Uses is _
variable v;
Select v such that Uses(_, "x")
SemanticError
5000
60 - Constant as LHS argument for Uses
constant c;
Select c such that Uses(c, _)
SemanticError
5000
61 - Variable as LHS argument for Uses
variable v;
Select v such that Uses(v, _)
SemanticError
5000
62 - Procedure as RHS argument for Uses
procedure p; stmt s;
Select s such that Uses(s, p)
SemanticError
5000
63 - Statement as RHS argument for Uses
read r; stmt s;
Select r such that Uses(r, s)
SemanticError
5000
64 - Statement Number as RHS argument for Uses
read r;
Select r such that Uses(r, 12)
SyntaxError
5000
65 - Read as RHS argument for Uses
procedure p; read r;
Select p such that Uses(p, r)
SemanticError
5000
66 - Print as RHS argument for Uses
procedure p; print pn;
Select p such that Uses(p, pn)
SemanticError
5000
67 - Call as RHS argument for Uses
procedure p; call cl;
Select p such that Uses(p, cl)
SemanticError
5000
68 - While as RHS argument for Uses
procedure p; while w;
Select p such that Uses(p, w)
SemanticError
5000
69 - If as RHS argument for Uses
procedure p; if i;
Select p such that Uses(p, i)
SemanticError
5000
70 - Assign as RHS argument for Uses
procedure p; assign a;
Select p such that Uses(p, a)
SemanticError
5000
71 - Constant as RHS argument for Uses
procedure p; constant c;
Select p such that Uses(p, c)
SemanticError
5000
72 - Variable as RHS argument for Calls
procedure p; variable v;
Select p such that Calls(p, v)
SemanticError
5000
73 - Statement as RHS argument for Calls
procedure p; stmt s;
Select p such that Calls(p, s)
SemanticError
5000
74 - Statement Number as RHS argument for Calls
procedure p;
Select p such that Calls(p, 12)
SyntaxError
5000
75 - Read as RHS argument for Calls
procedure p; read r;
Select p such that Calls(p, r)
SemanticError
5000
76 - Print as RHS argument for Calls
procedure p; print pn;
Select p such that Calls(p, pn)
SemanticError
5000
77 - Call as RHS argument for Calls
procedure p; call cl;
Select p such that Calls(p, cl)
SemanticError
5000
78 - While as RHS argument for Calls
procedure p; while w;
Select p such that Calls(p, w)
SemanticError
5000
79 - If as RHS argument for Calls
procedure p; if i;
Select p such that Calls(p, i)
SemanticError
5000
80 - Assign as RHS argument for Calls
procedure p; assign a;
Select p such that Calls(p, a)
SemanticError
5000
81 - Constant as RHS argument for Calls
procedure p; constant c;
Select p such that Calls(p, c)
SemanticError
5000
82 - Variable as LHS argument for Calls
procedure p; variable v;
Select p such that Calls(v, p)
SemanticError
5000
83 - Statement as LHS argument for Calls
procedure p; stmt s;
Select p such that Calls(s, p)
SemanticError
5000
84 - Statement Number as LHS argument for Calls
procedure p;
Select p such that Calls(12, p)
SyntaxError
5000
85 - Read as LHS argument for Calls
procedure p; read r;
Select p such that Calls(r, p)
SemanticError
5000
86 - Print as LHS argument for Calls
procedure p; print pn;
Select p such that Calls(pn, p)
SemanticError
5000
87 - Call as LHS argument for Calls
procedure p; call cl;
Select p such that Calls(cl, p)
SemanticError
5000
88 - While as LHS argument for Calls
procedure p; while w;
Select p such that Calls(w, p)
SemanticError
5000
89 - If as LHS argument for Calls
procedure p; if i;
Select p such that Calls(i, p)
SemanticError
5000
90 - Assign as LHS argument for Calls
procedure p; assign a;
Select p such that Calls(a, p)
SemanticError
5000
91 - Constant as LHS argument for Calls
procedure p; constant c;
Select p such that Calls(c, p)
SemanticError
5000
92 - Variable as RHS argument for Calls*
procedure p; variable v;
Select p such that Calls*(p, v)
SemanticError
5000
93 - Statement as RHS argument for Calls*
procedure p; stmt s;
Select p such that Calls*(p, s)
SemanticError
5000
94 - Statement Number as RHS argument for Calls*
procedure p;
Select p such that Calls*(p, 12)
SyntaxError
5000
95 - Read as RHS argument for Calls*
procedure p; read r;
Select p such that Calls*(p, r)
SemanticError
5000
96 - Print as RHS argument for Calls*
procedure p; print pn;
Select p such that Calls*(p, pn)
SemanticError
5000
97 - Call as RHS argument for Calls*
procedure p; call cl;
Select p such that Calls*(p, cl)
SemanticError
5000
98 - While as RHS argument for Calls*
procedure p; while w;
Select p such that Calls*(p, w)
SemanticError
5000
99 - If as RHS argument for Calls*
procedure p; if i;
Select p such that Calls*(p, i)
SemanticError
5000
100 - Assign as RHS argument for Calls*
procedure p; assign a;
Select p such that Calls*(p, a)
SemanticError
5000
101 - Constant as RHS argument for Calls*
procedure p; constant c;
Select p such that Calls*(p, c)
SemanticError
5000
102 - Variable as LHS argument for Calls*
procedure p; variable v;
Select p such that Calls*(v, p)
SemanticError
5000
103 - Statement as LHS argument for Calls*
procedure p; stmt s;
Select p such that Calls*(s, p)
SemanticError
5000
104 - Statement Number as LHS argument for Calls*
procedure p;
Select p such that Calls*(12, p)
SyntaxError
5000
105 - Read as LHS argument for Calls*
procedure p; read r;
Select p such that Calls*(r, p)
SemanticError
5000
106 - Print as LHS argument for Calls*
procedure p; print pn;
Select p such that Calls*(pn, p)
SemanticError
5000
107 - Call as LHS argument for Calls*
procedure p; call cl;
Select p such that Calls*(cl, p)
SemanticError
5000
108 - While as LHS argument for Calls*
procedure p; while w;
Select p such that Calls*(w, p)
SemanticError
5000
109 - If as LHS argument for Calls*
procedure p; if i;
Select p such that Calls*(i, p)
SemanticError
5000
110 - Assign as LHS argument for Calls*
procedure p; assign a;
Select p such that Calls*(a, p)
SemanticError
5000
111 - Constant as LHS argument for Calls*
procedure p; constant c;
Select p such that Calls*(c, p)
SemanticError
5000
112 - Variable as RHS argument for Calls*
procedure p; variable v;
Select p such that Calls*(p, v)
SemanticError
5000
113 - Statement as RHS argument for Calls*
procedure p; stmt s;
Select p such that Calls*(p, s)
SemanticError
5000
114 - Statement Number as RHS argument for Calls*
procedure p;
Select p such that Calls*(p, 12)
SyntaxError
5000
115 - Read as RHS argument for Calls*
procedure p; read r;
Select p such that Calls*(p, r)
SemanticError
5000
116 - Print as RHS argument for Calls*
procedure p; print pn;
Select p such that Calls*(p, pn)
SemanticError
5000
117 - Call as RHS argument for Calls*
procedure p; call cl;
Select p such that Calls*(p, cl)
SemanticError
5000
118 - While as RHS argument for Calls*
procedure p; while w;
Select p such that Calls*(p, w)
SemanticError
5000
119 - If as RHS argument for Calls*
procedure p; if i;
Select p such that Calls*(p, i)
SemanticError
5000
120 - Assign as RHS argument for Calls*
procedure p; assign a;
Select p such that Calls*(p, a)
SemanticError
5000
121 - Constant as RHS argument for Calls*
procedure p; constant c;
Select p such that Calls*(p, c)
SemanticError
5000
122 - Variable as LHS argument for Calls*
procedure p; variable v;
Select p such that Calls*(v, p)
SemanticError
5000
123 - Statement as LHS argument for Calls*
procedure p; stmt s;
Select p such that Calls*(s, p)
SemanticError
5000
124 - Statement Number as LHS argument for Calls*
procedure p;
Select p such that Calls*(12, p)
SyntaxError
5000
125 - Read as LHS argument for Calls*
procedure p; read r;
Select p such that Calls*(r, p)
SemanticError
5000
126 - Print as LHS argument for Calls*
procedure p; print pn;
Select p such that Calls*(pn, p)
SemanticError
5000
127 - Call as LHS argument for Calls*
procedure p; call cl;
Select p such that Calls*(cl, p)
SemanticError
5000
128 - While as LHS argument for Calls*
procedure p; while w;
Select p such that Calls*(w, p)
SemanticError
5000
129 - If as LHS argument for Calls*
procedure p; if i;
Select p such that Calls*(i, p)
SemanticError
5000
130 - Assign as LHS argument for Calls*
procedure p; assign a;
Select p such that Calls*(a, p)
SemanticError
5000
131 - Constant as LHS argument for Calls*
procedure p; constant c;
Select p such that Calls*(c, p)
SemanticError
5000
132 - Spaces in query
procedure p;
Select   p   such   that    Calls   (p, _)
A, B, C, D, F
5000
133 - stmt for assign/while pattern
stmt s;
Select s pattern s(_, _)
SemanticError
5000
134 - read for assign/while pattern
read r;
Select r pattern r(_, _)
SemanticError
5000
135 - print for assign/while pattern
print pn;
Select pn pattern pn(_, _)
SemanticError
5000
136 - call for assign/while pattern
call cl;
Select cl pattern cl(_, _)
SemanticError
5000
137 - while with three parameters
while w;
Select w pattern w(_, _, _)
SemanticError
5000
138 - if with two parameters
if i;
Select i pattern i(_, _)
SemanticError
5000
139 - variable for assign/while pattern
variable v;
Select v pattern v(_, _)
SemanticError
5000
140 - constant for assign/while pattern
constant c;
Select c pattern c(_, _)
SemanticError
5000
141 - procedure for assign/while pattern
procedure p;
Select p pattern p(_, _)
SemanticError
5000
142 - space in pattern
assign a;
Select a patt ern a(_, _)
SyntaxError
5000
143 - double quotes in entRef
assign a;
Select a pattern a(""x"", ""a+b"")
SyntaxError
5000
144 - integer in entRef
assign a;
Select a pattern a(12, _)
SyntaxError
5000
145 - invalid expression-spec
assign a;
Select a pattern a(_, "((((a+b)+3)*4)")
SyntaxError
5000
146 - space in syn-assign
assign a;
Select a pattern a  a(_, _)
SyntaxError
5000
147 - stmt in lhs assign pattern
assign a; stmt s;
Select a pattern a(s, _)
SemanticError
5000
148 - read in lhs assign pattern
assign a; read r;
Select a pattern a(r, _)
SemanticError
5000
149 - print in lhs assign pattern
assign a; print pn;
Select a pattern a(pn, _)
SemanticError
5000
150 - call in lhs assign pattern
assign a; call cl;
Select a pattern a(cl, _)
SemanticError
5000
151 - while in lhs assign pattern
assign a; while w;
Select a pattern a(w, _)
SemanticError
5000
152 - if in lhs assign pattern
assign a; if i;
Select a pattern a(i, _)
SemanticError
5000
153 - assign in lhs assign pattern
assign a, a1;
Select a pattern a(a1, _)
SemanticError
5000
154 - procedure in lhs assign pattern
assign a; procedure p;
Select a pattern a(p, _)
SemanticError
5000
155 - constant in lhs assign pattern
assign a; constant c;
Select a pattern a(c, _)
SemanticError
5000
156 - stmt in rhs assign pattern
assign a; stmt s;
Select a pattern a(_, s)
SyntaxError
5000
157 - read in rhs assign pattern
assign a; read r;
Select a pattern a(_, r)
SyntaxError
5000
158 - print in rhs assign pattern
assign a; print pn;
Select a pattern a(_, pn)
SyntaxError
5000
159 - call in rhs assign pattern
assign a; call cl;
Select a pattern a(_, cl)
SyntaxError
5000
160 - while in rhs assign pattern
assign a; while w;
Select a pattern a(_, w)
SyntaxError
5000
161 - if in rhs assign pattern
assign a; if i;
Select a pattern a(_, i)
SyntaxError
5000
162 - assign in rhs assign pattern
assign a, a1;
Select a pattern a(_, a1)
SyntaxError
5000
163 - procedure in rhs assign pattern
assign a; procedure p;
Select a pattern a(_, p)
SyntaxError
5000
164 - variable in rhs assign pattern
assign a; variable v;
Select a pattern a(_, v)
SyntaxError
5000
165 - constant in rhs assign pattern
assign a; constant c;
Select a pattern a(_, c)
SyntaxError
5000
166 - valid spacing in expression-spec
assign a;
Select a pattern a(_, _   "test "   _)
none
5000
167 - valid spacing in entRef
procedure p;
Select p such that Calls(p, "none  ")
none
5000
168 - leading integer for entRef in Uses
procedure p;
Select p such that Uses(p, "1abc")
SyntaxError
5000
169 - leading integer for entRef in Modifies
procedure p;
Select p such that Modifies(p, "1abc")
SyntaxError
5000
170 - leading integer for entRef in assign pattern
assign a;
Select a pattern a("1abc", _)
SyntaxError
5000
171 - syn-while not while
read w;
Select w pattern w("a", _)
SemanticError
5000
172 - leading integer for entRef in while pattern
while w;
Select w pattern w("1abc", _)
SyntaxError
5000
173 - syn-if not if
stmt i;
Select i pattern i("a", _, _)
SemanticError
5000
174 - leading integer for entRef in if pattern
if i;
Select i pattern i("1abc", _, _)
SyntaxError
5000
175 - space in while pattern
while w;
Select w patt ern w(_, _)
SyntaxError
5000
176 - double quotes in entRef
while w;
Select w pattern w(""x"", _)
SyntaxError
5000
177 - integer in entRef
while w;
Select w pattern w(12, _)
SyntaxError
5000
178 - invalid expression-spec
while w;
Select w pattern w(_, "((((w+b)+3)*4)")
SyntaxError
5000
179 - space in syn-while
while w;
Select w pattern w  w(_, _)
SyntaxError
5000
180 - stmt in lhs while pattern
while w; stmt s;
Select w pattern w(s, _)
SemanticError
5000
181 - read in lhs while pattern
while w; read r;
Select w pattern w(r, _)
SemanticError
5000
182 - print in lhs while pattern
while w; print pn;
Select w pattern w(pn, _)
SemanticError
5000
183 - call in lhs while pattern
while w; call cl;
Select w pattern w(cl, _)
SemanticError
5000
184 - while in lhs while pattern
while w;
Select w pattern w(w, _)
SemanticError
5000
185 - if in lhs while pattern
while w; if i;
Select w pattern w(i, _)
SemanticError
5000
186 - while in lhs while pattern
while w, w1;
Select w pattern w(w1, _)
SemanticError
5000
187 - procedure in lhs while pattern
while w; procedure p;
Select w pattern w(p, _)
SemanticError
5000
188 - constant in lhs while pattern
while w; constant c;
Select w pattern w(c, _)
SemanticError
5000
189 - stmt in rhs while pattern
while w; stmt s;
Select w pattern w(_, s)
SyntaxError
5000
190 - read in rhs while pattern
while w; read r;
Select w pattern w(_, r)
SyntaxError
5000
191 - print in rhs while pattern
while w; print pn;
Select w pattern w(_, pn)
SyntaxError
5000
192 - call in rhs while pattern
while w; call cl;
Select w pattern w(_, cl)
SyntaxError
5000
193 - while in rhs while pattern
while w;
Select w pattern w(_, w)
SyntaxError
5000
194 - if in rhs while pattern
while w; if i;
Select w pattern w(_, i)
SyntaxError
5000
195 - while in rhs while pattern
while w, w1;
Select w pattern w(_, w1)
SyntaxError
5000
196 - procedure in rhs while pattern
while w; procedure p;
Select w pattern w(_, p)
SyntaxError
5000
197 - variable in rhs while pattern
while w; variable v;
Select w pattern w(_, v)
SyntaxError
5000
198 - constant in rhs while pattern
while w; constant c;
Select w pattern w(_, c)
SyntaxError
5000
199 - expr in rhs while pattern
while w;
Select w pattern w(_, "x")
SemanticError
5000
200 - partial expr in rhs while pattern
while w;
Select w pattern w(_, _"x"_)
SemanticError
5000
201 - space in if pattern
if i;
Select i patt ern w(_, _, _)
SyntaxError
5000
202 - double quotes in entRef
if i;
Select i pattern i(""x"", _, _)
SyntaxError
5000
203 - integer in entRef
if i;
Select i pattern i(12, _, _)
SyntaxError
5000
204 - invalid expression-spec
if i;
Select i pattern i("((((w+b)+3)*4)", _, _)
SyntaxError
5000
205 - space in syn-if
if ii;
Select i pattern i  i(_, _)
SyntaxError
5000
206 - stmt in lhs if pattern
if i; stmt s;
Select i pattern i(s, _, _)
SemanticError
5000
207 - read in lhs if pattern
if i; read r;
Select i pattern i(r, _, _)
SemanticError
5000
208 - print in lhs if pattern
if i; print pn;
Select i pattern i(pn, _, _)
SemanticError
5000
209 - call in lhs if pattern
if i; call cl;
Select i pattern i(cl, _, _)
SemanticError
5000
210 - if in lhs if pattern
if i;
Select i pattern i(i, _, _)
SemanticError
5000
211 - while in lhs if pattern
if i; while w;
Select i pattern i(w, _, _)
SemanticError
5000
212 - if in lhs if pattern
if i, i1;
Select i pattern i(i1, _, _)
SemanticError
5000
213 - procedure in lhs if pattern
if i; procedure p;
Select i pattern i(p, _, _)
SemanticError
5000
214 - constant in lhs if pattern
if i; constant c;
Select i pattern i(c, _, _)
SemanticError
5000
215 - entRef in middle of if pattern
if i; variable v;
Select i pattern i(_, v, _)
SyntaxError
5000
216 - entRef in rhs of if pattern
if i; variable v;
Select i pattern i(_, _, v)
SyntaxError
5000
217 - expr in middle of if pattern
if i;
Select i pattern i(_, "x", _)
SyntaxError
5000
218 - partial expr in middle of if pattern
if i;
Select i pattern i(_, _"x"_, _)
SyntaxError
5000
219 - expr in rhs of if pattern
if i;
Select i pattern i(_, _, "x")
SyntaxError
5000
220 - partial expr in rhs of if pattern
if i;
Select i pattern i(_, _, _"x"_)
SyntaxError
5000
221 - Procedure as LHS argument for Next
procedure p;
Select p such that Next(p, _)
SemanticError
5000
222 - Procedure as RHS argument for Next
procedure p;
Select p such that Next(_, p)
SemanticError
5000
223 - Variable as LHS argument for Next
variable v;
Select v such that Next(v, _)
SemanticError
5000
224 - Variable as RHS argument for Next
variable v;
Select v such that Next(_, v)
SemanticError
5000
225 - Constant as LHS argument for Next
constant c;
Select c such that Next(c, _)
SemanticError
5000
226 - Constant as RHS argument for Next
constant c;
Select c such that Next(_, c)
SemanticError
5000
227 - Procedure as LHS argument for Next*
procedure p;
Select p such that Next*(p, _)
SemanticError
5000
228 - Procedure as RHS argument for Next*
procedure p;
Select p such that Next*(_, p)
SemanticError
5000
229 - Variable as LHS argument for Next*
variable v;
Select v such that Next*(v, _)
SemanticError
5000
230 - Variable as RHS argument for Next*
variable v;
Select v such that Next*(_, v)
SemanticError
5000
231 - Constant as LHS argument for Next*
constant c;
Select c such that Next*(c, _)
SemanticError
5000
232 - Constant as RHS argument for Next*
constant c;
Select c such that Next*(_, c)
SemanticError
5000
233 - Space in relRef for Next*
stmt s;
Select s such that Next  *(_, _)
SyntaxError
5000
234 - Procedure as LHS argument for Affects
procedure p;
Select p such that Affects(p, _)
SemanticError
5000
235 - Procedure as RHS argument for Affects
procedure p;
Select p such that Affects(_, p)
SemanticError
5000
236 - Variable as LHS argument for Affects
variable v;
Select v such that Affects(v, _)
SemanticError
5000
237 - Variable as RHS argument for Affects
variable v;
Select v such that Affects(_, v)
SemanticError
5000
238 - Constant as LHS argument for Affects
constant c;
Select c such that Affects(c, _)
SemanticError
5000
239 - Constant as RHS argument for Affects
constant c;
Select c such that Affects(_, c)
SemanticError
5000
240 - Procedure as LHS argument for Affects*
procedure p;
Select p such that Affects*(p, _)
SemanticError
5000
241 - Procedure as RHS argument for Affects*
procedure p;
Select p such that Affects*(_, p)
SemanticError
5000
242 - Variable as LHS argument for Affects*
variable v;
Select v such that Affects*(v, _)
SemanticError
5000
243 - Variable as RHS argument for Affects*
variable v;
Select v such that Affects*(_, v)
SemanticError
5000
244 - Constant as LHS argument for Affects*
constant c;
Select c such that Affects*(c, _)
SemanticError
5000
245 - Constant as RHS argument for Affects*
constant c;
Select c such that Affects*(_, c)
SemanticError
5000
246 - Space in relRef for Affects*
stmt s;
Select s such that Affects  *(_, _)
SyntaxError
5000
247 - invalid expression spec
if i; while w;
Select BOOLEAN pattern i("r!=d", _, _)
SyntaxError
5000
248 - invalid variable
if i; while w;
Select BOOLEAN pattern w("23", _)
SyntaxError
5000
249 - attrCompare (procName, non-name)
procedure p; call cl; constant c; stmt s; variable v;
Select BOOLEAN with p.procName = "123"
SyntaxError
5000
251 - attrCompare (procName, name without double quotes)
procedure p; call cl; constant c; stmt s; variable v;
Select BOOLEAN with p.procName = abc
SyntaxError
5000
252 - attrCompare (procName, value)
procedure p; call cl; constant c; stmt s; variable v;
Select BOOLEAN with p.procName = c.value
SemanticError
5000
253 - attrCompare (procName, stmt#)
procedure p; call cl; constant c; stmt s; variable v;
Select BOOLEAN with p.procName = cl.stmt#
SemanticError
500
254 - attrCompare (value, non-integer)
procedure p; call cl; constant c; stmt s; variable v;
Select BOOLEAN with c.value = a123
SyntaxError
5000
255 - attrCompare (value, integer but with double quotes)
procedure p; call cl; constant c; stmt s; variable v;
Select BOOLEAN with c.value = "123"
SyntaxError
5000
256 - attrCompare (value, procName)
procedure p; call cl; constant c; stmt s; variable v;
Select BOOLEAN with c.value = p.procName
SemanticError
5000
257 - attrCompare (value, varName)
procedure p; call cl; constant c; stmt s; variable v;
Select BOOLEAN with c.value = v.varName
SemanticError
5000
258 - attrCompare (stmt#, non-integer)
procedure p; call cl; constant c; stmt s; variable v;
Select BOOLEAN with s.stmt# = a123
SyntaxError
5000
259 - attrCompare (stmt#, integer but with double quotes)
procedure p; call cl; constant c; stmt s; variable v;
Select BOOLEAN with s.stmt# = "123"
SyntaxError
5000
260 - attrCompare (stmt#, procName)
procedure p; call cl; constant c; stmt s; variable v;
Select BOOLEAN with s.stmt# = p.procName
SemanticError
5000
261 - attrCompare (stmt#, varName)
procedure p; call cl; constant c; stmt s; variable v;
Select BOOLEAN with s.stmt# = v.varName
SemanticError
5000
262 - attrRef (stmt# of procedure)
procedure p; call cl; constant c; stmt s; variable v;
Select BOOLEAN with p.stmt# = 12
SemanticError
5000
263 - attrRef (value of procedure)
procedure p; call cl; constant c; stmt s; variable v;
Select BOOLEAN with p.value = 12
SemanticError
5000
264 - attrRef (varName of procedure)
procedure p; call cl; constant c; stmt s; variable v;
Select BOOLEAN with p.varName = "a"
SemanticError
5000
265 - attrRef (value of stmt)
procedure p; call cl; constant c; stmt s; variable v;
Select BOOLEAN with s.value = 12
SemanticError
5000
266 - attrRef (varName of stmt)
procedure p; call cl; constant c; stmt s; variable v;
Select BOOLEAN with s.varName = "a"
SemanticError
5000
267 - attrRef (procName of stmt)
procedure p; call cl; constant c; stmt s; variable v;
Select BOOLEAN with s.procName = "a"
SemanticError
5000
268 - attrRef (stmt# of constant)
procedure p; call cl; constant c; stmt s; variable v;
Select BOOLEAN with c.stmt# = 12
SemanticError
5000
269 - attrRef (varName of constant)
procedure p; call cl; constant c; stmt s; variable v;
Select BOOLEAN with c.varName = "a"
SemanticError
5000
270 - attrRef (procName of constant)
procedure p; call cl; constant c; stmt s; variable v;
Select BOOLEAN with c.procName = "a"
SemanticError
5000
271 - attrRef (value of call statement)
procedure p; call cl; constant c; stmt s; variable v;
Select BOOLEAN with cl.value = 12
SemanticError
5000
272 - attrRef (varName of call statement)
procedure p; call cl; constant c; stmt s; variable v;
Select BOOLEAN with cl.varName = "a"
SemanticError
5000
273 - BOOLEAN inside tuple not declared as synonym
procedure p;
Select <BOOLEAN>
SemanticError
5000
274 - Missing angle bracket
procedure p;
Select <p.procName
SyntaxError
5000
275 - Extra ,
procedure p;
Select <p.procName, >
SyntaxError
5000
276 - Undeclared synonym in tuple
procedure p;
Select <p1.procName>
SemanticError
5000
277 - Invalid spacing in tuple
procedure p1;
Select <p  1.  procName>
SyntaxError
5000
278 - BOOLEAN inside tuple not declared as synonym but with another elem
procedure p1;
Select <p1.procName, BOOLEAN>
SemanticError
5000
279 - mispelled with
procedure p;
Select BOOLEAN witth p.procName = "p1"
SyntaxError
5000
280 - mispelled procName
procedure p;
Select BOOLEAN with p.procname = "p1"
SyntaxError
5000
281 - mispelled varName
read r;
Select BOOLEAN with r.Varname = "a"
SyntaxError
5000
282 - mispelled stmt#
read r;
Select BOOLEAN with r.stmt## = 12
SyntaxError
5000
283 - mispelled value
constant c;
Select BOOLEAN with c.val = 12
SyntaxError
5000
284 - Select Boolean
constant c;
Select Boolean with c.value = 12
SemanticError
5000
285 - such that used twice
assign a; while w;
Select a such that Modifies(a, "x") and such that Next*(1, a)
SyntaxError
5000
286 - connect pattern-cl and such-that cl using and
assign a; while w;
Select a such that Parent*(w, a) and pattern a("x", _)
SyntaxError
5000
287 - connect such-that cl and with cl using and
assign a; while w;
Select a such that Parent*(w, a) and with a.stmt# = 12
SyntaxError
5000
288 - connect pattern cl and with cl using and
assign a; while w;
Select a pattern a("x", _) and with a.stmt# = 12
SyntaxError
5000
289 - with used twice
assign a; while w;
Select a with a.stmt# = 12 and with w.stmt# = 13
SyntaxError
5000
290 - pattern used twice
assign a; while w;
Select a pattern a("x", _) and pattern w(_,_)
SyntaxError
5000
